// const quickSort = (arr) => {
//   let pivot = Math.trunc(arr.length/2);
//   console.log("pivot is ---",arr[pivot])
//   for (let i=0;i<=pivot;i++) {
//     if (arr[i]>arr[pivot]) {
//       var tempI = arr[i]
//       arr[i] == tempJ
//     }
//     for (let j=arr.length-1;j>=pivot;j--){
//       if (arr[j]<arr[pivot]) {
//         var tempJ = arr[j]
//         arr[j] == tempI;
//       } 
//       console.log("i is ---",arr[i],"j is ----",arr[j])
//     } console.log(arr)
//   } 
// }

// quickSort([19, 40, 20, 7, 6, 18, 9, 12, 10, 30 ])

function quickSort(arr, lo, hi) {
  if (lo >= 0 && hi >= 0 && lo < hi) {
    const p = partition(arr, lo, hi);
    quickSort(arr, lo, p);
    quickSort(arr, p + 1, hi);
  }
}

function partition(arr, lo, hi) {
  const pivot = arr[Math.floor((lo + hi) / 2)];
  let i = lo - 1;
  let j = hi + 1;
  while (true) {
    do {
        i++;
    } while (arr[i] < pivot);

    do {
        j--;
    } while (arr[j] > pivot);

    if (i >= j) {
      return j;
    }

    swap(arr, i, j);
  }
}

function swap(arr, i, j) {
  const tmp = arr[i];
  arr[i] = arr[j];
  arr[j] = tmp;
}

let arr = [9, 4, 1, 6, 7, 3, 8, 2, 5];
quickSort(arr, 0, arr.length - 1);